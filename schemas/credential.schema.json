{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Credentials Object",
  "description": "Defining the credential",
  "additionalProperties": {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "enum": ["usernamePassword", "secret", "vaultAppRole"],
        "title": "Credential Type",
        "description": "Type of the credential. Can be \"usernamePassword\", \"secret\", \"vaultAppRole\""
      },
      "data": {
        "type": "object"
      }
    },
    "required": ["type", "data"],
    "additionalProperties": false,
    "allOf": [
      {
        "if": { "properties": { "type": { "const": "usernamePassword" } } },
        "then": {
          "properties": {
            "data": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "username": {
                  "type": "string",
                  "title": "Credential User Name",
                  "description": "User name for the specific credential",
                  "examples": [
                    "pgadmin",
                    "envgeneNullValue"
                  ]
                },
                "password": {
                  "type": "string",
                  "title": "Credential Password",
                  "description": "Password for the specific credential",
                  "examples": [
                    "password123",
                    "envgeneNullValue"
                  ]
                }
              },
              "required": ["username", "password"]
            }
          }
        }
      },
      {
        "if": { "properties": { "type": { "const": "secret" } } },
        "then": {
          "properties": {
            "data": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "secret": {
                  "type": "string",
                  "examples": [
                    "mySecretValue",
                    "envgeneNullValue"
                  ]
                }
              },
              "required": ["secret"]
            }
          }
        }
      },
      {
        "if": { "properties": { "type": { "const": "vaultAppRole" } } },
        "then": {
          "properties": {
            "data": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "roleId": {
                  "type": "string",
                  "examples": [
                    "role123",
                    "envgeneNullValue"
                  ],
                  "title": "Role ID",
                  "description": "RoleID is an identifier that selects the AppRole against which the other credentials are evaluated. When authenticating against this auth method's login endpoint, the RoleID is a required argument (via role_id) at all times"
                },
                "secretId": {
                  "type": "string",
                  "title": "Secret ID",
                  "description": "SecretID is a credential that is required by default for any login (via secret_id) and is intended to always be secret. (For advanced usage, requiring a SecretID can be disabled via an AppRole's bind_secret_id parameter, allowing machines with only knowledge of the RoleID, or matching other set constraints, to fetch a token). SecretIDs can be created against an AppRole either via generation of a 128-bit purely random UUID by the role itself (Pull mode) or via specific, custom values (Push mode). Similarly to tokens, SecretIDs have properties like usage-limit, TTLs and expirations",
                  "examples": [
                    "secret123",
                    "envgeneNullValue"
                  ]
                },
                "path": {
                  "type": "string",
                  "title": "Path",
                  "description": "Path in vault to credentials storage",
                  "examples": [
                    "vault/path/credential",
                    "envgeneNullValue"
                  ]
                },
                "namespace": {
                  "type": "string",
                  "title": "Namespace",
                  "description": "The Vault Namespace the mount path is located. If the auth mount path is on the root namespace use /, if namespace is empty the global namespace or credential namespace will be used if specified",
                  "examples": [
                    "/",
                    "envgeneNullValue"
                  ]
                }
              },
              "required": [
                "roleId",
                "secretId",
                "path",
                "namespace"
              ]
            }
          }
        }
      }
    ]
  }
}