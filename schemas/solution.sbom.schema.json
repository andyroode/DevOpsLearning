{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://qubership.org/schema/solution.sbom.schema.json",
  "type": "object",
  "title": "Solution SBOM",
  "required": [
    "$schema",
    "bomFormat",
    "specVersion",
    "serialNumber",
    "version",
    "metadata",
    "components",
    "dependencies"
  ],
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string"
    },
    "bomFormat": {
      "type": "string",
      "title": "BOM Format",
      "description": "Specifies the format of the BOM. This helps to identify the file as CycloneDX since BOMs do not have a filename convention, nor does JSON schema support namespaces. This value must be \"CycloneDX\"",
      "enum": [
        "CycloneDX"
      ]
    },
    "specVersion": {
      "type": "string",
      "title": "CycloneDX Specification Version",
      "description": "The version of the CycloneDX specification the BOM conforms to",
      "examples": [
        "1.6"
      ]
    },
    "serialNumber": {
      "type": "string",
      "title": "BOM Serial Number",
      "description": "Every BOM generated SHOULD have a unique serial number, even if the contents of the BOM have not changed over time. If specified, the serial number must conform to [RFC 4122](https://www.ietf.org/rfc/rfc4122.html). Use of serial numbers is recommended",
      "examples": [
        "urn:uuid:3e671687-395b-41f5-a30f-a58921a69b79"
      ],
      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    },
    "version": {
      "type": "integer",
      "title": "BOM Version",
      "description": "Whenever an existing BOM is modified, either manually or through automated processes, the version of the BOM SHOULD be incremented by 1. When a system is presented with multiple BOMs with identical serial numbers, the system SHOULD use the most recent version of the BOM. The default version is '1'",
      "minimum": 1,
      "default": 1,
      "examples": [
        1
      ]
    },
    "metadata": {
      "$ref": "#/definitions/metadata-solution",
      "title": "BOM Metadata",
      "description": "Provides additional information about a BOM"
    },
    "components": {
      "type": "array",
      "title": "Components",
      "description": "A list of software and hardware components included in the parent component. This is not a dependency tree. It provides a way to specify a hierarchical representation of component assemblies, similar to system &#8594; subsystem &#8594; parts assembly in physical supply chains",
      "items": {
        "$ref": "#/definitions/solution-component"
      },
      "uniqueItems": true
    },
    "dependencies": {
      "type": "array",
      "title": "Dependencies",
      "description": "Provides the ability to document dependency relationships including provided & implemented components",
      "items": {
        "$ref": "#/definitions/dependency"
      },
      "uniqueItems": true
    }
  },
  "definitions": {
    "refLinkType": {
      "description": "Descriptor for an element identified by the attribute 'bom-ref' in the same BOM document.\nIn contrast to `bomLinkElementType`.",
      "$ref": "#/definitions/refType"
    },
    "refType": {
      "description": "Identifier for referable and therefore interlinkable elements.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links",
      "type": "string",
      "minLength": 1
    },
    "version": {
      "description": "A single disjunctive version identifier, for a component or service",
      "type": "string",
      "maxLength": 1024,
      "examples": [
        "9.0.14",
        "v1.33.7",
        "7.0.0-M1",
        "2.0pre1",
        "1.0.0-beta1",
        "0.8.15"
      ]
    },
    "dependency": {
      "type": "object",
      "title": "Dependency",
      "description": "Defines the direct dependencies of a component, service, or the components provided/implemented by a given component. Components or services that do not have their own dependencies must be declared as empty elements within the graph. Components or services that are not represented in the dependency graph may have unknown dependencies. It is recommended that implementations assume this to be opaque and not an indicator of an object being dependency-free. It is recommended to leverage compositions to indicate unknown dependency graphs",
      "required": [
        "ref"
      ],
      "additionalProperties": false,
      "properties": {
        "ref": {
          "$ref": "#/definitions/refLinkType",
          "title": "Reference",
          "description": "References a component or service by its bom-ref attribute"
        }
      }
    },
    "metadata-solution": {
      "type": "object",
      "title": "BOM Metadata",
      "description": "Provides additional information about a BOM",
      "required": [
        "timestamp",
        "component",
        "tools"
      ],
      "additionalProperties": false,
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "component": {
          "type": "object",
          "title": "Component",
          "required": [
            "type",
            "mime-type",
            "bom-ref",
            "name",
            "version",
            "components"
          ],
          "additionalProperties": false,
          "uniqueItems": true,
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "application"
              ],
              "title": "Component Type",
              "description": "Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component"
            },
            "mime-type": {
              "type": "string",
              "enum": [
                "application/vnd.qubership.solution"
              ],
              "title": "Mime-Type",
              "description": "The mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented, such as an image, font, or executable"
            },
            "bom-ref": {
              "$ref": "#/definitions/refType",
              "title": "BOM Reference",
              "description": "An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links"
            },
            "name": {
              "type": "string",
              "title": "Component Name",
              "description": "The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery",
              "examples": [
                "tomcat-catalina"
              ]
            },
            "version": {
              "$ref": "#/definitions/version",
              "title": "Component Version",
              "description": "The component version. The version should ideally comply with semantic versioning but is not enforced"
            },
            "components": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "Component",
                "required": [
                  "type",
                  "mime-type",
                  "bom-ref",
                  "group",
                  "name",
                  "version",
                  "purl"
                ],
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "data"
                    ],
                    "title": "Component Type",
                    "description": "Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component"
                  },
                  "mime-type": {
                    "type": "string",
                    "enum": [
                      "application/vnd.qubership.solution-descriptor"
                    ],
                    "title": "Mime-Type",
                    "description": "The mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented, such as an image, font, or executable"
                  },
                  "bom-ref": {
                    "$ref": "#/definitions/refType",
                    "title": "BOM Reference",
                    "description": "An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links"
                  },
                  "group": {
                    "type": "string",
                    "title": "Component Group",
                    "description": "The grouping name or identifier. This will often be a shortened, single name of the company or project that produced the component, or the source package or domain name. Whitespace and special characters should be avoided. Examples include: apache, org.apache.commons, and apache.org",
                    "examples": [
                      "com.acme"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "title": "Component Name",
                    "description": "The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery",
                    "examples": [
                      "tomcat-catalina"
                    ]
                  },
                  "version": {
                    "$ref": "#/definitions/version",
                    "title": "Component Version",
                    "description": "The component version. The version should ideally comply with semantic versioning but is not enforced"
                  },
                  "purl": {
                    "type": "string",
                    "title": "Package URL (purl)",
                    "description": "Asserts the identity of the component using package-url (purl). The purl, if specified, must be valid and conform to the specification defined at: [https://github.com/package-url/purl-spec](https://github.com/package-url/purl-spec). Refer to `@.evidence.identity` to optionally provide evidence that substantiates the assertion of the component's identity",
                    "examples": [
                      "pkg:maven/com.acme/tomcat-catalina@9.0.14?packaging=jar"
                    ]
                  }
                }
              },
              "uniqueItems": true,
              "title": "Components",
              "description": "A list of software and hardware components included in the parent component. This is not a dependency tree. It provides a way to specify a hierarchical representation of component assemblies, similar to system &#8594; subsystem &#8594; parts assembly in physical supply chains"
            }
          }
        },
        "tools": {
          "type": "object",
          "title": "Tools",
          "description": "The tool(s) used in the creation, enrichment, and validation of the BOM.",
          "additionalProperties": false,
          "properties": {
            "components": {
              "type": "array",
              "title": "Components",
              "description": "A list of software and hardware components used as tools.",
              "items": {
                "type": "object",
                "title": "Component",
                "required": [
                  "type",
                  "name",
                  "version"
                ],
                "additionalProperties": false,
                "uniqueItems": true,
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "application"
                    ],
                    "title": "Component Type",
                    "description": "Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component"
                  },
                  "name": {
                    "type": "string",
                    "title": "Component Name",
                    "description": "The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery",
                    "examples": [
                      "tomcat-catalina"
                    ]
                  },
                  "version": {
                    "$ref": "#/definitions/version",
                    "title": "Component Version",
                    "description": "The component version. The version should ideally comply with semantic versioning but is not enforced"
                  }
                }
              },
              "uniqueItems": true
              
            }
          }
        }
      }
    },
    "solution-component": {
      "type": "object",
      "title": "Component of Solution",
      "description": "Defines the solution's composition, including cloud applications, their configuration parameters, and the automation tools employed to control their lifecycle",
      "required": [
        "type",
        "mime-type",
        "bom-ref",
        "name",
        "version",
        "externalReferences"
      ],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "application",
            "data"
          ],
          "title": "Component Type",
          "description": "Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component"
        },
        "mime-type": {
          "type": "string",
          "enum": [
            "application/vnd.qubership.application",
            "application/vnd.qubership.envgene.template"
          ],
          "title": "Mime-Type",
          "description": "The mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented, such as an image, font, or executable. Some library or framework components may also have an associated mime-type"
        },
        "bom-ref": {
          "$ref": "#/definitions/refType",
          "title": "BOM Reference",
          "description": "An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links"
        },
        "name": {
          "type": "string",
          "title": "Component Name",
          "description": "The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery",
          "examples": [
            "tomcat-catalina"
          ]
        },
        "version": {
          "$ref": "#/definitions/version",
          "title": "Component Version",
          "description": "The component version. The version should ideally comply with semantic versioning but is not enforced"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "value"
            ],
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "externalReferences": {
          "type": "array",
          "title": "External References",
          "description": "External reference to SBOM",
          "items": {
            "type": "object",
            "required": [
              "type",
              "url"
            ],
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "const": "bom"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      }
    }
  }
}