---
# spec: https://semantic-release.gitbook.io/semantic-release/usage/configuration
plugins:
  # Determine the type of release by analyzing commits.
  # ie: Major, Minor or Patch
  - - "@semantic-release/commit-analyzer"
    - preset: conventionalcommits
      releaseRules:
        - { breaking: true, release: major }
        - { revert: true, release: patch }    # Reverts a previous commit
        - { type: feat, release: minor }      # A new feature
        - { type: fix, release: patch }       # A bug fix
        - { type: perf, release: patch }      # A code change that improves performance
        - { type: security, release: patch }  # A code change that improves security
        - { type: refactor, release: patch }  # A code change that neither fixes a bug nor adds a feature
        - { type: style, release: false }     # Changes that do not affect the meaning of the code
        - { type: docs, release: patch }      # Documentation only changes
        - { type: build, release: patch }     # Changes that affect the build system or external dependencies
        - { type: ci, release: false }        # Changes to our CI configuration files and scripts
        - { type: test, release: false }      # Adding missing tests or correcting existing tests
        - { type: chore, release: false }     # Other changes that don't modify src or test files
  # Generate changelog content with conventional-changelog
  - - "@semantic-release/release-notes-generator"
    - preset: conventionalcommits
      presetConfig:
        # spec: https://github.com/conventional-changelog/conventional-changelog-config-spec/tree/master/versions/2.2.0
        types:
          - { type: revert, section: "üëÄ Reverts" }
          - { type: feat, section: "üöÄ Features" }
          - { type: fix, section: "üõ† Bug Fixes" }
          - { type: perf, section: "‚è© Improvements" }
          - { type: security, section: "‚è© Improvements" }
          - { type: refactor, section: "‚è© Improvements" }
          - { type: style, section: "‚è© Improvements" }
          - { type: docs, section: "üìî Docs" }
          - { type: build, section: "ü¶ä CI/CD" }
          - { type: ci, section: "ü¶ä CI/CD" }
          - { type: test, section: "ü¶ä CI/CD" }
          - { type: chore, section: "Other" }
  # Create or update a changelog file
  - - "@semantic-release/changelog"
    - changelogFile: CHANGELOG.md
  # Execute custom shell commands
  - - "@semantic-release/exec"
    - prepareCmd: "gitlab-ci/build/bumpversion.sh \"${lastRelease.gitTag}\" \"${nextRelease.gitTag}\" \"${nextRelease.type}\""
  # Commit release assets back to repo
  - - "@semantic-release/git"
    - message: 'chore(release): ${nextRelease.version} ${nextRelease.notes}'
      assets: ['CHANGELOG.md', 'gitlab-ci/build/build.yaml', 'config.xml']
  # Create new gitlab release
  - "@semantic-release/gitlab"
