name: EnvGene Execution

on:
  workflow_dispatch:

jobs:
  show_environment_variables:
    runs-on: ubuntu-latest
    outputs:
      env_matrix: ${{ steps.matrix-generator.outputs.env_matrix }}
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4

      - name: Read environment variables
        run: |
          python .github/scripts/load_env_params.py .github/config/env_config.yaml >> $GITHUB_ENV

      - name: Environment variables values
        run: |
          echo "ENV_NAMES = $ENV_NAMES"
          echo "ENV_BUILDER = $ENV_BUILDER"
          echo "GENERATE_EFFECTIVE_SET = $GENERATE_EFFECTIVE_SET"
          echo "ENV_TEMPLATE_VERSION = $ENV_TEMPLATE_VERSION"
          echo "ENV_TEMPLATE_TEST = $ENV_TEMPLATE_TEST"
          echo "ENV_INVENTORY_INIT = $ENV_INVENTORY_INIT"
          echo "IS_OFFSITE = $IS_OFFSITE"
          echo "JSON_SCHEMAS_DIR = $JSON_SCHEMAS_DIR"
          echo "SD_DATA = $SD_DATA"
          echo "SD_VERSION = $SD_VERSION"

      - name: Convert ENV_NAMES to JSON array
        id: matrix-generator
        shell: bash
        run: |
          arr="["
          first=1
          for name in $(echo "$ENV_NAMES" | tr ',' ' '); do
            if [ "$first" = 1 ]; then
              first=0
            else
              arr="$arr,"
            fi
            arr="$arr\"$name\""
          done
          arr="$arr]"
          
          echo "env_matrix=$arr" >> $GITHUB_OUTPUT    

  parameters_validation:
    runs-on: ubuntu-latest
    needs: show_environment_variables
    strategy:
      fail-fast: false
      matrix:
        environment: ${{ fromJson(needs.show_environment_variables.outputs.env_matrix) }}
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4

      - name: Read environment variables
        run: |
          python .github/scripts/load_env_params.py .github/config/env_config.yaml >> $GITHUB_ENV
          
      - name: EnvGene parameters validation
        run: |
          chmod +x .github/scripts/execute_action_by_docker.sh
          .github/scripts/execute_action_by_docker.sh ghcr.io/netcracker/qubership-build-gcip:main "python /module/scripts/github_actions.py validate_pipeline"
          

  generate_inventory:
    runs-on: ubuntu-latest
    needs:
      - parameters_validation
      - show_environment_variables
    strategy:
      fail-fast: false
      matrix:
        environment: ${{ fromJson(needs.show_environment_variables.outputs.env_matrix) }}
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4

      - name: Read environment variables
        run: |
          python .github/scripts/load_env_params.py .github/config/env_config.yaml >> $GITHUB_ENV

      - name: Generate inventory
        run: |
          export ENV_NAME="${{ matrix.environment }}"
          chmod +x .github/scripts/execute_action_by_docker.sh
          .github/scripts/execute_action_by_docker.sh ghcr.io/netcracker/qubership-build-envgene:main "python3 /build_env/scripts/build_env/env_inventory_generation.py"       
