name: Pipeline Execution

on:
  workflow_dispatch:
    inputs:
      ENV_NAMES:
        description: 'Environment names (comma-separated)'
        required: true
        default: 'dev,prod'
      ENV_BUILDER:
        description: 'Enable environment builder (true/false)'
        required: false
        default: 'false'
      GET_PASSPORT:
        description: 'Get passport (true/false)'
        required: false
        default: 'false'
      CMDB_IMPORT:
        description: 'Enable CMDB import (true/false)'
        required: false
        default: 'false'
      GENERATE_EFFECTIVE_SET:
        description: 'Generate effective set (true/false)'
        required: false
        default: 'false'
      ENV_TEMPLATE_VERSION:
        description: 'Environment template version'
        required: false
        default: ''
      ENV_TEMPLATE_TEST:
        description: 'Enable environment template test (true/false)'
        required: false
        default: 'false'
      IS_OFFSITE:
        description: 'Is offsite deployment (true/false)'
        required: false
        default: 'false'
      JSON_SCHEMAS_DIR:
        description: 'Path to JSON schemas directory'
        required: false
        default: '/module/schemas'

jobs:
  run-script-in-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "ENV_NAMES=${{ github.event.inputs.ENV_NAMES }}" >> $GITHUB_ENV
          echo "ENV_BUILDER=${{ github.event.inputs.ENV_BUILDER }}" >> $GITHUB_ENV
          echo "GET_PASSPORT=${{ github.event.inputs.GET_PASSPORT }}" >> $GITHUB_ENV
          echo "CMDB_IMPORT=${{ github.event.inputs.CMDB_IMPORT }}" >> $GITHUB_ENV
          echo "GENERATE_EFFECTIVE_SET=${{ github.event.inputs.GENERATE_EFFECTIVE_SET }}" >> $GITHUB_ENV
          echo "ENV_TEMPLATE_VERSION=${{ github.event.inputs.ENV_TEMPLATE_VERSION }}" >> $GITHUB_ENV
          echo "ENV_TEMPLATE_TEST=${{ github.event.inputs.ENV_TEMPLATE_TEST }}" >> $GITHUB_ENV
          echo "IS_OFFSITE=${{ github.event.inputs.IS_OFFSITE }}" >> $GITHUB_ENV
          echo "JSON_SCHEMAS_DIR=${{ github.event.inputs.JSON_SCHEMAS_DIR }}" >> $GITHUB_ENV
          echo "CI_COMMIT_REF_NAME=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Run main.py inside Docker container
        run: |
          docker run --rm -v $PWD:/workspace -w /workspace \
          -e ENV_NAMES="$ENV_NAMES" \
          -e ENV_BUILDER="$ENV_BUILDER" \
          -e GET_PASSPORT="$GET_PASSPORT" \
          -e CMDB_IMPORT="$CMDB_IMPORT" \
          -e GENERATE_EFFECTIVE_SET="$GENERATE_EFFECTIVE_SET" \
          -e ENV_TEMPLATE_VERSION="$ENV_TEMPLATE_VERSION" \
          -e ENV_TEMPLATE_TEST="$ENV_TEMPLATE_TEST" \
          -e IS_OFFSITE="$IS_OFFSITE" \
          -e JSON_SCHEMAS_DIR="$JSON_SCHEMAS_DIR" \
          -e CI_COMMIT_REF_NAME="$CI_COMMIT_REF_NAME" \
          ghcr.io/netcracker/qubership-build-gcip:main \
          python /module/scripts/main.py generate_pipeline