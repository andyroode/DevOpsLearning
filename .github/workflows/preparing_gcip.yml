name: EnvGene Execution

on:
  workflow_dispatch:

jobs:
  show_environment_variables:
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4

      - name: Read environment variables
        run: |
          python .github/scripts/load_env_params.py .github/config/env_config.yaml >> $GITHUB_ENV

      - name: Environment variables values
        run: |
          echo "ENV_NAMES = $ENV_NAMES"
          echo "ENV_BUILDER = $ENV_BUILDER"
          echo "GENERATE_EFFECTIVE_SET = $GENERATE_EFFECTIVE_SET"
          echo "ENV_TEMPLATE_VERSION = $ENV_TEMPLATE_VERSION"
          echo "ENV_TEMPLATE_TEST = $ENV_TEMPLATE_TEST"
          echo "ENV_INVENTORY_INIT = $ENV_INVENTORY_INIT"
          echo "IS_OFFSITE = $IS_OFFSITE"
          echo "JSON_SCHEMAS_DIR = $JSON_SCHEMAS_DIR"
          echo "SD_DATA = $SD_DATA"
          echo "SD_VERSION = $SD_VERSION"

  parameters_validation:
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4

      - name: Read environment variables
        run: |
          python .github/scripts/load_env_params.py .github/config/env_config.yaml >> $GITHUB_ENV
          
      - name: EnvGene parameters validation
        run: |
          docker run --rm \
            -v "$GITHUB_WORKSPACE:/repo" \
            -w /repo \
            -e CI_PROJECT_DIR="/repo" \
            -e ENV_NAMES="${ENV_NAMES:-""}" \
            -e ENV_BUILDER="${ENV_BUILDER:-""}" \
            -e GENERATE_EFFECTIVE_SET="${GENERATE_EFFECTIVE_SET:-""}" \
            -e ENV_TEMPLATE_VERSION="${ENV_TEMPLATE_VERSION:-""}" \
            -e ENV_TEMPLATE_TEST="${ENV_TEMPLATE_TEST:-""}" \
            -e IS_OFFSITE="${IS_OFFSITE:-""}" \
            -e JSON_SCHEMAS_DIR="${JSON_SCHEMAS_DIR:-""}" \
            -e SD_DATA='${SD_DATA:-"{}"}' \
            -e SD_VERSION="${SD_VERSION:-""}" \
            -e ENV_INVENTORY_INIT="${ENV_INVENTORY_INIT:-""}" \
            -e CI_COMMIT_REF_NAME="${CI_COMMIT_REF_NAME:-""}" \
            ghcr.io/netcracker/qubership-build-gcip:main \
            python /module/scripts/github_actions.py validate_pipeline