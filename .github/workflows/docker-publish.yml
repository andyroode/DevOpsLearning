---
name: Docker build and publish
on:
  workflow_call:
    inputs:
      ref:
        description: "Branch name to create release from"
        required: false
        type: string
      artifact-id:
        default: ''
        required: false
        type: string
      context:
        default: "git"
        required: false
        type: string
      dry-run:
        default: false
        required: false
        type: boolean
      download-artifact:
        default: true
        required: false
        type: boolean
      component:
        default: '[{"name": "default", "file": "./Dockerfile", "context": "."}]'
        required: false
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJson(inputs.component) }}
        # platform: ${{ inputs.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Debug
        run: |
          echo "artifact_id ${{ inputs.artifact-id }}"
          echo "version ${{ github.event.inputs.version }}"
          echo "ref ${{ inputs.ref }}"
          echo "GITHUB_REPOSITORY ${{ github.repository }}"
          echo "GITHUB_REF ${{ github.ref }}"

      - name: Download artifact
        if: ${{ inputs.download-artifact }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-id }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          context: ${{ inputs.context }}
          images: ghcr.io/${{ github.repository_owner }}/${{ inputs.artifact-id  || matrix.component.name }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Check Dockerfile existence
        run: ls -la

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.component.context }}
          file: ${{ matrix.component.file }}
          push: ${{ !inputs.dry-run }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}