# The contents of this file is generated from template artifact: prod.inmrnd.mano_devops_releaseengineering_sandboxtestenvironment_configuration-management_template-project.
# Contents will be overwritten by next generation.
# Please modify this contents only for development purposes or as workaround.
name: "cloud_passport_sample_composite_with_creds"
apiUrl: "dev-1.k8s.sdntest.qubership.com" # cloud passport: cloud-passport-sample version: 1.5
apiPort: 6443 # cloud passport: cloud-passport-sample version: 1.5
privateUrl: "dev-1.k8s-private.sdntest.qubership.com" # cloud passport: cloud-passport-sample version: 1.5
publicUrl: "dev-1.k8s.sdntest.qubership.com" # cloud passport: cloud-passport-sample version: 1.5
dashboardUrl: "https://dev-1.k8s.sdntest.qubership.com" # cloud passport: cloud-passport-sample version: 1.5
labels: []
defaultCredentialsId: "TOKEN" # cloud passport: cloud-passport-sample version: 1.5
protocol: "https" # cloud passport: cloud-passport-sample version: 1.5
dbMode: "db"
databases: []
mergeDeployParametersAndE2EParameters: false
maasConfig:
  credentialsId: "maas-cred" # cloud passport: cloud-passport-sample version: 1.5
  enable: true  # cloud passport: cloud-passport-sample version: 1.5
  maasUrl: "https://maas-service-maas.${CLOUD_PRIVATE_HOST}" # cloud passport: cloud-passport-sample version: 1.5
  maasInternalAddress: "http://maas-service.maas:8080" # cloud passport: cloud-passport-sample version: 1.5
vaultConfig:
  credentialsId: ""  # cloud passport: cloud-passport-sample version: 1.5
  enable: false # cloud passport: cloud-passport-sample version: 1.5
  url: "" # cloud passport: cloud-passport-sample version: 1.5
dbaasConfigs:
  - credentialsId: "dbaas-cluster-dba-cred" # cloud passport: cloud-passport-sample version: 1.5
    enable: true # cloud passport: cloud-passport-sample version: 1.5
    apiUrl: "http://dbaas-aggregator.dbaas:8080" # cloud passport: cloud-passport-sample version: 1.5
    aggregatorUrl: "https://aggregator-dbaas.${CLOUD_PRIVATE_HOST}" # cloud passport: cloud-passport-sample version: 1.5
consulConfig:
  tokenSecret: "consul-admin-cred" # cloud passport: cloud-passport-sample version: 1.5
  enabled: false # cloud passport: cloud-passport-sample version: 1.5
  publicUrl: "http://consul-consul.${CLOUD_PRIVATE_HOST}" # cloud passport: cloud-passport-sample version: 1.5
  internalUrl: "consul.consul" # cloud passport: cloud-passport-sample version: 1.5
deployParameters:
  BEOC_STORAGE_BUCKET: "beoc-bucket" # cloud passport: cloud-passport-sample version: 1.5
  BEOC_STORAGE_PASSWORD: "${STORAGE_PASSWORD}" # cloud passport: cloud-passport-sample version: 1.5
  BEOC_STORAGE_USERNAME: "${STORAGE_USERNAME}" # cloud passport: cloud-passport-sample version: 1.5
  CDC_NIFI_NAMESPACE: null # cloud passport: cloud-passport-sample version: 1.5
  CDC_STREAMING_PLATFORM_PASSWORD: "${cmdb.creds.get(\"cdc-streaming-cred\").password}" # cloud passport: cloud-passport-sample version: 1.5
  CDC_STREAMING_PLATFORM_USERNAME: "${cmdb.creds.get(\"cdc-streaming-cred\").username}" # cloud passport: cloud-passport-sample version: 1.5
  CDN_STORAGE_PASSWORD: "${STORAGE_PASSWORD}" # cloud passport: cloud-passport-sample version: 1.5
  CDN_STORAGE_PROVIDER: "${STORAGE_PROVIDER}" # cloud passport: cloud-passport-sample version: 1.5
  CDN_STORAGE_REGION: "${STORAGE_REGION}" # cloud passport: cloud-passport-sample version: 1.5
  CDN_STORAGE_SERVER_URL: "${STORAGE_SERVER_URL}" # cloud passport: cloud-passport-sample version: 1.5
  CDN_STORAGE_USERNAME: "${STORAGE_USERNAME}" # cloud passport: cloud-passport-sample version: 1.5
  CLOUD_DASHBOARD_URL: "https://dev-1.k8s.sdntest.qubership.com" # cloud passport: cloud-passport-sample version: 1.5
  CMDB_URL: "https://cloud-deployer.qubership.com" # cloud passport: cloud-passport-sample version: 1.5
  CM_KAFKA_BOOTSTRAP_SERVERS: "kafka.kafka:9092" # cloud passport: cloud-passport-sample version: 1.5
  CM_KAFKA_CLIENT_PASSWORD: "${cmdb.creds.get(\"cm-kafka-cred\").username}" # cloud passport: cloud-passport-sample version: 1.5
  CM_KAFKA_CLIENT_USERNAME: "${cmdb.creds.get(\"cm-kafka-cred\").password}" # cloud passport: cloud-passport-sample version: 1.5
  CM_POSTGRESQL_RW_PASSWORD: "${cmdb.creds.get(\"cm-postgresql-rw-cred\").password}" # cloud passport: cloud-passport-sample version: 1.5
  CM_POSTGRESQL_RW_SERVER: "pg-patroni.postgresql-billing:5432" # cloud passport: cloud-passport-sample version: 1.5
  CM_POSTGRESQL_RW_USERNAME: "${cmdb.creds.get(\"cm-postgresql-rw-cred\").username}" # cloud passport: cloud-passport-sample version: 1.5
  CONSUL_ENABLED: "false" # cloud passport: cloud-passport-sample version: 1.5
  CSE_EXTERNAL_MONITORING_PASSWORD: null # cloud passport: cloud-passport-sample version: 1.5
  CSE_EXTERNAL_MONITORING_USER: null # cloud passport: cloud-passport-sample version: 1.5
  CSE_GRAYLOG_PASSWORD: "${cmdb.creds.get(\"cse-graylog-cred\").password}" # cloud passport: cloud-passport-sample version: 1.5
  CSE_GRAYLOG_USER: "${cmdb.creds.get(\"cse-graylog-cred\").username}" # cloud passport: cloud-passport-sample version: 1.5
  DAT_STORAGE_BUCKET: "dat-bucket" # cloud passport: cloud-passport-sample version: 1.5
  DAT_STORAGE_PASSWORD: "${STORAGE_PASSWORD}" # cloud passport: cloud-passport-sample version: 1.5
  DAT_STORAGE_USERNAME: "${STORAGE_USERNAME}" # cloud passport: cloud-passport-sample version: 1.5
  DEFAULT_TENANT_ADMIN_LOGIN: "cpq@qubership.com" # cloud passport: cloud-passport-sample version: 1.5
  DEFAULT_TENANT_NAME: "cpq" # cloud passport: cloud-passport-sample version: 1.5
  DFT_STORAGE_BUCKET: "dft-bucket" # cloud passport: cloud-passport-sample version: 1.5
  DFT_STORAGE_PASSWORD: "${STORAGE_PASSWORD}" # cloud passport: cloud-passport-sample version: 1.5
  DFT_STORAGE_USERNAME: "${STORAGE_USERNAME}" # cloud passport: cloud-passport-sample version: 1.5
  DOC_STORAGE_PASSWORD: "${STORAGE_PASSWORD}" # cloud passport: cloud-passport-sample version: 1.5
  DOC_STORAGE_PERSISTENT_BUCKET_NAME: "storage-proxy-permanent-bucket" # cloud passport: cloud-passport-sample version: 1.5
  DOC_STORAGE_PROVIDER: "${STORAGE_PROVIDER}" # cloud passport: cloud-passport-sample version: 1.5
  DOC_STORAGE_REGION: "${STORAGE_REGION}" # cloud passport: cloud-passport-sample version: 1.5
  DOC_STORAGE_SERVER_URL: "${STORAGE_SERVER_URL}" # cloud passport: cloud-passport-sample version: 1.5
  DOC_STORAGE_TEMPORARY_BUCKET_NAME: "storage-proxy-temporary-bucket" # cloud passport: cloud-passport-sample version: 1.5
  DOC_STORAGE_USERNAME: "${STORAGE_USERNAME}" # cloud passport: cloud-passport-sample version: 1.5
  DPC_STORAGE_BUCKET: "discrepancy-detector-reports" # cloud passport: cloud-passport-sample version: 1.5
  DPC_STORAGE_PASSWORD: "${STORAGE_PASSWORD}" # cloud passport: cloud-passport-sample version: 1.5
  DPC_STORAGE_REGION: "${STORAGE_REGION}" # cloud passport: cloud-passport-sample version: 1.5
  DPC_STORAGE_USERNAME: "${STORAGE_USERNAME}" # cloud passport: cloud-passport-sample version: 1.5
  DST_STORAGE_BUCKET: "dst-bucket" # cloud passport: cloud-passport-sample version: 1.5
  DST_STORAGE_PASSWORD: "${STORAGE_PASSWORD}" # cloud passport: cloud-passport-sample version: 1.5
  DST_STORAGE_USERNAME: "${STORAGE_USERNAME}" # cloud passport: cloud-passport-sample version: 1.5
  GRAFANA_UI_URL: "https://grafana-platform-monitoring.${CLOUD_PUBLIC_HOST}" # cloud passport: cloud-passport-sample version: 1.5
  GRAYLOG_UI_URL: "https://graylog-service.ops-logging:12201" # cloud passport: cloud-passport-sample version: 1.5
  HDS_STORAGE_BUCKET: "hds_data" # cloud passport: cloud-passport-sample version: 1.5
  HDS_STORAGE_PASSWORD: "${STORAGE_PASSWORD}" # cloud passport: cloud-passport-sample version: 1.5
  HDS_STORAGE_PROVIDER: "${STORAGE_PROVIDER}" # cloud passport: cloud-passport-sample version: 1.5
  HDS_STORAGE_REGION: "${STORAGE_REGION}" # cloud passport: cloud-passport-sample version: 1.5
  HDS_STORAGE_SERVER_URL: "${STORAGE_SERVER_URL}" # cloud passport: cloud-passport-sample version: 1.5
  HDS_STORAGE_USERNAME: "${STORAGE_USERNAME}" # cloud passport: cloud-passport-sample version: 1.5
  MAVEN_REPO_DEV_NAME: "${MAVEN_REPO_NAME}" # cloud passport: cloud-passport-sample version: 1.5
  MAVEN_REPO_NAME: "pd.saas.mvn.group" # cloud passport: cloud-passport-sample version: 1.5
  MAVEN_REPO_STAGING_NAME: "${MAVEN_REPO_NAME}" # cloud passport: cloud-passport-sample version: 1.5
  MAVEN_REPO_URL: "https://artifactorycn.qubership.com/" # cloud passport: cloud-passport-sample version: 1.5
  MONITORING_ENABLED: true # cloud passport: cloud-passport-sample version: 1.5
  MONITORING_EXT_MONITORING_QUERY_URL: null # cloud passport: cloud-passport-sample version: 1.5
  MONITORING_NAMESPACE: "platform-monitoring" # cloud passport: cloud-passport-sample version: 1.5
  MONITORING_TYPE: "VictoriaDB" # cloud passport: cloud-passport-sample version: 1.5
  OPS_IDP_URL: "https://idp-infra.${CLOUD_PUBLIC_HOST}" # cloud passport: cloud-passport-sample version: 1.5
  OSS_STREAMING_PLATFORM_PASSWORD: "${cmdb.creds.get(\"oss-streaming-cred\").password}" # cloud passport: cloud-passport-sample version: 1.5
  OSS_STREAMING_PLATFORM_URL: "streaming-platform.streaming:8083" # cloud passport: cloud-passport-sample version: 1.5
  OSS_STREAMING_PLATFORM_USERNAME: "${cmdb.creds.get(\"oss-streaming-cred\").username}" # cloud passport: cloud-passport-sample version: 1.5
  PRODUCTION_MODE: false # cloud passport: cloud-passport-sample version: 1.5
  SMTP_SERVER_PASSWORD: "${cmdb.creds.get(\"smtp-server-cred\").password}" # cloud passport: cloud-passport-sample version: 1.5
  SMTP_SERVER_PORT: 25 # cloud passport: cloud-passport-sample version: 1.5
  SMTP_SERVER_URL: "testmail.qubership.com" # cloud passport: cloud-passport-sample version: 1.5
  SMTP_SERVER_USERNAME: "${cmdb.creds.get(\"smtp-server-cred\").username}" # cloud passport: cloud-passport-sample version: 1.5
  SSM_CMDB_TOKEN: "${cmdb.creds.get(\"ssm-cmdb-cred\").password}" # cloud passport: cloud-passport-sample version: 1.5
  SSM_CMDB_USER: "${cmdb.creds.get(\"ssm-cmdb-cred\").username}" # cloud passport: cloud-passport-sample version: 1.5
  STORAGE_PASSWORD: "${cmdb.creds.get(\"storage-cred\").password}" # cloud passport: cloud-passport-sample version: 1.5
  STORAGE_PROVIDER: "s3" # cloud passport: cloud-passport-sample version: 1.5
  STORAGE_REGION: null # cloud passport: cloud-passport-sample version: 1.5
  STORAGE_RWO_CLASS: "csi-cinder-sc-retain" # cloud passport: cloud-passport-sample version: 1.5
  STORAGE_RWX_CLASS: "nfs-sc" # cloud passport: cloud-passport-sample version: 1.5
  STORAGE_SERVER_URL: "https://s3.qubership.com" # cloud passport: cloud-passport-sample version: 1.5
  STORAGE_USERNAME: "${cmdb.creds.get(\"storage-cred\").username}" # cloud passport: cloud-passport-sample version: 1.5
  TRACING_ENABLED: false # cloud passport: cloud-passport-sample version: 1.5
  TRACING_HOST: "nc-diagnostic-agent" # cloud passport: cloud-passport-sample version: 1.5
  TRACING_UI_URL: "${CLOUD_PROTOCOL}://jaeger.${CLOUD_PUBLIC_HOST}" # cloud passport: cloud-passport-sample version: 1.5
  ZOOKEEPER_ADDRESS: "zookeeper.zookeeper:2181" # cloud passport: cloud-passport-sample version: 1.5
  ZOOKEEPER_URL: "${ZOOKEEPER_ADDRESS}" # cloud passport: cloud-passport-sample version: 1.5
  nrm.cassandra.url: "cassandra://admin:admin@cassandra.cassandra:9042" # cloud passport: cloud-passport-sample version: 1.5
  nrm.kafka.url: "kafka://admin:admin@kafka.kafka:9092" # cloud passport: cloud-passport-sample version: 1.5
  nrm.postgresql.password: "tmp_password" # cloud passport: cloud-passport-sample version: 1.5
  nrm.postgresql.ro.address: "pg-patroni-ro.postgresql-billing:5432" # cloud passport: cloud-passport-sample version: 1.5
  nrm.postgresql.rw.address: "pg-patroni.postgresql-billing:5432" # cloud passport: cloud-passport-sample version: 1.5
  nrm.postgresql.username: "tmp_user" # cloud passport: cloud-passport-sample version: 1.5
e2eParameters:
  CLOUD_PUBLIC_HOST_E2E: "dev-1.k8s.sdntest.qubership.com"
  DCL_CONFIG_ARGOCD_PASSWORD: "${creds.get(\"argocd-cred\").password}" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_ARGOCD_PROJECT: "project"                                 # paramset: argocd-configuration-env-specific-e2e version: 23.4 source: instance
  DCL_CONFIG_ARGOCD_URL: "https://argocd-server.dev-1.k8s.sdntest.qubership.com" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_ARGOCD_USER: "${creds.get(\"argocd-cred\").username}" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_CMDB_PASSWORD: "${creds.get(\"deployer-cred\").username}" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_CMDB_URL: "https://cloud-deployer.qubership.com" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_CMDB_USER: "${creds.get(\"deployer-cred\").username}" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_CONF_ENGINE: "local-kustomize" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_DOCKER_REGISTRY: "artifactorycn.qubership.com:17014"    # paramset: argocd-configuration-env-specific-e2e version: 23.4 source: instance
  DCL_CONFIG_GITLAB_TOKEN: "${creds.get(\"dcl-gitlab-cred\").password}" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_GITLAB_USER: "${creds.get(\"dcl-gitlab-cred\").username}" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_PROD_MODE: false # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_REGISTRY_PASSWORD: "${creds.get(\"dcl-registry-cred\").password}" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_REGISTRY_URL: "https://artifactorymb.qubership.com"     # paramset: argocd-configuration-env-specific-e2e version: 23.4 source: instance
  DCL_CONFIG_REGISTRY_USER: "${creds.get(\"dcl-registry-cred\").username}" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_TECH_APP_NAME_VERSION: "ach-kubernetes-agent:release-1.0.8-20240816.160656-3-RELEASE" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_CONFIG_TICKET_ID: "ETBSS-32954" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_GIT_BRANCH: "cloud_passport_sample"                              # paramset: argocd-configuration-env-specific-e2e version: 23.4 source: instance
  DCL_GIT_COMMIT_MESSAGE: "[ETBSS-32954] Update DCL configuration file for further deploy" # paramset: argocd-configuration-common-e2e version: 23.4 source: template
  DCL_GIT_URL: "https://git.qubership.com/SD.prj/devops/deployer-pilot/deployer-pilot-configuration" # paramset: argocd-configuration-env-specific-e2e version: 23.4 source: instance
technicalConfigurationParameters: {}
deployParameterSets: []
e2eParameterSets: []
technicalConfigurationParameterSets: []
