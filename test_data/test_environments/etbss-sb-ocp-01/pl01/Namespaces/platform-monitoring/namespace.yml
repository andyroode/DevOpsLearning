# The contents of this file is generated from template artifact: prod.inmrnd.mano_devops_releaseengineering_sandboxtestenvironment_configuration-management_template-project.
# Contents will be overwritten by next generation.
# Please modify this contents only for development purposes or as workaround.
name: "pl01-platform-monitoring"
credentialsId: ""
isServerSideMerge: false
labels:
  - "solutionInstance-pl01"
  - "solution-Infrastructure"
cleanInstallApprovalRequired: true
mergeDeployParametersAndE2EParameters: false
deployParameters:
  DEPLOY_W_HELM: true # paramset: platform-monitoring version: 23.4 source: template
  DISABLE_CRD: false # paramset: platform-monitoring version: 23.4 source: template
  DISABLE_FORCE_APPLY: false # paramset: platform-monitoring version: 23.4 source: template
  ESCAPE_SEQUENCE: true # paramset: platform-monitoring version: 23.4 source: template
  ams: # paramset: ams-service version: 23.4 source: template
    config:
      ams:
        alerting:
          enabled: true
        remote-tsdb:
          prometheus:
            - name: "victoriametrics"
              url: "http://vmsingle-k8s.${MONITORING_NAMESPACE}:8429"
      quarkus:
        datasource:
          db-kind: "postgresql"
          jdbc:
            url: "jdbc:postgresql://pg-patroni.${namespace_postgresql_platform}.svc:5432/postgres?currentSchema=ams"
          passwordSecret:
            key: "password"
            name: "ams-postgres-credentials"
          usernameSecret:
            key: "username"
            name: "ams-postgres-credentials"
    secrets:
      - data:
          password: "${creds.get(\"postgresql-platform-cred\").password}"
          username: "${creds.get(\"postgresql-platform-cred\").username}"
        name: "ams-postgres-credentials"
  global: # paramset: platform-monitoring version: 23.4 source: template
    privilegedRights: true
  grafana: # paramset: platform-monitoring version: 23.4 source: template
    ingress:
      host: "grafana-pl01-platform-monitoring.apps."
      install: true
    install: true
    operator:
      resources:
        limits:
          cpu: "200m"
          memory: "1Gi"
        requests:
          cpu: "50m"
          memory: "200Mi"
    resources:
      limits:
        cpu: "500m"
        memory: "1Gi"
      requests:
        cpu: "100m"
        memory: "256Mi"
  kubeStateMetrics: # paramset: platform-monitoring version: 23.4 source: template
    install: true
    paused: false
    resources:
      limits:
        cpu: "1000m"
        memory: "1Gi"
      requests:
        cpu: "100m"
        memory: "128Mi"
  nodeExporter: # paramset: platform-monitoring version: 23.4 source: template
    install: true
    port: "9112"
    setupSecurityContext: true
  prometheus: # paramset: platform-monitoring version: 23.4 source: template
    install: false
  prometheusadapter: # paramset: platform-monitoring version: 23.4 source: template
    install: true
  validate: false # paramset: platform-monitoring version: 23.4 source: template
  victoriametrics: # paramset: platform-monitoring version: 23.4 source: template
    vmAgent:
      evaluationInterval: "1m"
      externalLabels:
        cluster: "etbss-sb-ocp-01"
      extraArgs:
        promscrape.maxScrapeSize: "64MB"
      ingress:
        install: true
      install: true
      minScrapeInterval: "1m"
      paused: false
      remoteWrite:
        - url: "http://vmsingle-k8s:8429/api/v1/write"
        - url: "http://ams:8187/api/v3/prometheus/write"
      remoteWriteSettings:
        label:
          cluster: "etbss-sb-ocp-01"
      replicas: "1"
      resources:
        limits:
          cpu: "2"
          memory: "6Gi"
        requests:
          cpu: "500m"
          memory: "3Gi"
      secrets:
        - "kube-etcd-client-certs"
    vmAlertManager:
      configRawYaml: "\"\""
      configSecret: "\"\""
      ingress:
        install: true
      install: true
      paused: false
      replicas: "1"
      resources:
        limits:
          cpu: "100m"
          memory: "256Mi"
        requests:
          cpu: "30m"
          memory: "56Mi"
      retention: "120h"
      secrets:
        - "kube-etcd-client-certs"
      terminationGracePeriodSeconds: 30
    vmOperator:
      install: true
      paused: false
      resources:
        limits:
          cpu: "400m"
          memory: "800Mi"
        requests:
          cpu: "200m"
          memory: "100Mi"
    vmSingle:
      ingress:
        install: true
      install: true
      paused: false
      resources:
        limits:
          cpu: "1000m"
          memory: "5000Mi"
        requests:
          cpu: "300m"
          memory: "2000Mi"
      retentionPeriod: "2d"
      storage:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "40Gi"
        storageClassName: "${STORAGE_RWO_CLASS}"
e2eParameters: {}
technicalConfigurationParameters: {}
deployParameterSets: []
e2eParameterSets: []
technicalConfigurationParameterSets: []


